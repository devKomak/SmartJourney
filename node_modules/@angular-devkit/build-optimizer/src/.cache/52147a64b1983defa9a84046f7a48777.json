{"remainingRequest":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@firebase\\firestore\\dist\\esm\\src\\util\\api.js","dependencies":[{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@firebase\\firestore\\dist\\esm\\src\\util\\api.js","mtime":1525686737419},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1525686739382},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525686733597}],"contextDependencies":[],"result":["/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// We are doing some heavy reflective stuff, lots of any casting necessary\r\n/* tslint:disable:no-any */\r\nimport { Code, FirestoreError } from './error';\r\n/**\r\n * Helper function to prevent instantiation through the constructor.\r\n *\r\n * This method creates a new constructor that throws when it's invoked.\r\n * The prototype of that constructor is then set to the prototype of the hidden\r\n * \"class\" to expose all the prototype methods and allow for instanceof\r\n * checks.\r\n *\r\n * To also make all the static methods available, all properties of the\r\n * original constructor are copied to the new constructor.\r\n */\r\nexport function makeConstructorPrivate(cls, optionalMessage) {\r\n    function PublicConstructor() {\r\n        var error = 'This constructor is private.';\r\n        if (optionalMessage) {\r\n            error += ' ';\r\n            error += optionalMessage;\r\n        }\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, error);\r\n    }\r\n    // Make sure instanceof checks work and all methods are exposed on the public\r\n    // constructor\r\n    PublicConstructor.prototype = cls.prototype;\r\n    // Copy any static methods/members\r\n    for (var staticProperty in cls) {\r\n        if (cls.hasOwnProperty(staticProperty)) {\r\n            PublicConstructor[staticProperty] = cls[staticProperty];\r\n        }\r\n    }\r\n    return PublicConstructor;\r\n}\r\n\r\n//# sourceMappingURL=api.js.map\r\n",null]}