{"remainingRequest":"C:\\Users\\Jacek\\Desktop\\SPA\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Jacek\\Desktop\\SPA\\SmartJourney\\node_modules\\angularfire2\\firestore\\collection\\changes.js","dependencies":[{"path":"C:\\Users\\Jacek\\Desktop\\SPA\\SmartJourney\\node_modules\\angularfire2\\firestore\\collection\\changes.js","mtime":1523789742491},{"path":"C:\\Users\\Jacek\\Desktop\\SPA\\SmartJourney\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522421949433},{"path":"C:\\Users\\Jacek\\Desktop\\SPA\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1522421939420}],"contextDependencies":[],"result":["import { fromCollectionRef } from '../observable/fromRef';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/scan';\r\nexport function docChanges(query) {\r\n    return fromCollectionRef(query)\r\n        .map(function (action) {\r\n        return action.payload.docChanges\r\n            .map(function (change) { return ({ type: change.type, payload: change }); });\r\n    });\r\n}\r\nexport function sortedChanges(query, events) {\r\n    return fromCollectionRef(query)\r\n        .map(function (changes) { return changes.payload.docChanges; })\r\n        .scan(function (current, changes) { return combineChanges(current, changes, events); }, [])\r\n        .map(function (changes) { return changes.map(function (c) { return ({ type: c.type, payload: c }); }); });\r\n}\r\nexport function combineChanges(current, changes, events) {\r\n    changes.forEach(function (change) {\r\n        if (events.indexOf(change.type) > -1) {\r\n            current = combineChange(current, change);\r\n        }\r\n    });\r\n    return current;\r\n}\r\nexport function combineChange(combined, change) {\r\n    switch (change.type) {\r\n        case 'added':\r\n            if (combined[change.newIndex] && combined[change.newIndex].doc.id == change.doc.id) {\r\n            }\r\n            else {\r\n                combined.splice(change.newIndex, 0, change);\r\n            }\r\n            break;\r\n        case 'modified':\r\n            if (change.oldIndex !== change.newIndex) {\r\n                combined.splice(change.oldIndex, 1);\r\n                combined.splice(change.newIndex, 0, change);\r\n            }\r\n            else {\r\n                combined.splice(change.newIndex, 1, change);\r\n            }\r\n            break;\r\n        case 'removed':\r\n            combined.splice(change.oldIndex, 1);\r\n            break;\r\n    }\r\n    return combined;\r\n}\r\n//# sourceMappingURL=changes.js.map",null]}