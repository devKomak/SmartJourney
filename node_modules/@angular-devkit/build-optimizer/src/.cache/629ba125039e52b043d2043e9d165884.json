{"remainingRequest":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@firebase\\database\\dist\\cjs\\src\\api\\test_access.js","dependencies":[{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@firebase\\database\\dist\\cjs\\src\\api\\test_access.js","mtime":1525130643853},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1525130646613},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525130641176}],"contextDependencies":[],"result":["\"use strict\";\r\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar RepoInfo_1 = require(\"../core/RepoInfo\");\r\nvar PersistentConnection_1 = require(\"../core/PersistentConnection\");\r\nvar RepoManager_1 = require(\"../core/RepoManager\");\r\nvar Connection_1 = require(\"../realtime/Connection\");\r\nexports.DataConnection = PersistentConnection_1.PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection_1.PersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection_1.PersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nexports.RealTimeConnection = Connection_1.Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nexports.hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection_1.PersistentConnection.prototype.put;\r\n    PersistentConnection_1.PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection_1.PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nexports.ConnectionTarget = RepoInfo_1.RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nexports.queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nexports.listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nexports.forceRestClient = function (forceRestClient) {\r\n    RepoManager_1.RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\r\n\r\n//# sourceMappingURL=test_access.js.map\r\n",null]}