{"remainingRequest":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\angularfire2\\database\\observable\\fromRef.js","dependencies":[{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\angularfire2\\database\\observable\\fromRef.js","mtime":1524871919931},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1524871921124},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1524871915457}],"contextDependencies":[],"result":["import { Observable } from 'rxjs/Observable';\r\nimport { observeOn } from 'rxjs/operator/observeOn';\r\nimport { ZoneScheduler } from 'angularfire2';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/share';\r\nexport function fromRef(ref, event, listenType) {\r\n    if (listenType === void 0) { listenType = 'on'; }\r\n    var ref$ = new Observable(function (subscriber) {\r\n        var fn = ref[listenType](event, function (snapshot, prevKey) {\r\n            subscriber.next({ snapshot: snapshot, prevKey: prevKey });\r\n            if (listenType == 'once') {\r\n                subscriber.complete();\r\n            }\r\n        }, subscriber.error.bind(subscriber));\r\n        if (listenType == 'on') {\r\n            return { unsubscribe: function () { ref.off(event, fn); } };\r\n        }\r\n        else {\r\n            return { unsubscribe: function () { } };\r\n        }\r\n    })\r\n        .map(function (payload) {\r\n        var snapshot = payload.snapshot, prevKey = payload.prevKey;\r\n        var key = null;\r\n        if (snapshot.exists()) {\r\n            key = snapshot.key;\r\n        }\r\n        return { type: event, payload: snapshot, prevKey: prevKey, key: key };\r\n    })\r\n        .delay(0);\r\n    return observeOn.call(ref$, new ZoneScheduler(Zone.current)).share();\r\n}\r\n//# sourceMappingURL=fromRef.js.map",null]}