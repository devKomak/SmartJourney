{"remainingRequest":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\agm-direction\\agm-direction.umd.js","dependencies":[{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\agm-direction\\agm-direction.umd.js","mtime":1525686738167},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1525686739382},{"path":"C:\\Users\\Jacek\\Desktop\\SmartJourney\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525686733597}],"contextDependencies":[],"result":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@agm/core')) :\n        typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@agm/core'], factory) :\n            (factory((global['agm-direction'] = {}), global.core, global.core$1));\n}(this, (function (exports, core, core$1) {\n    'use strict';\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var AgmDirection = /*@__PURE__*/ (function () {\n        function AgmDirection(gmapsApi) {\n            this.gmapsApi = gmapsApi;\n            this.waypoints = [];\n            this.travelMode = 'DRIVING';\n            this.optimizeWaypoints = true;\n            this.visible = true;\n            this.drivingOptions = undefined;\n            this.transitOptions = undefined;\n            this.directionsService = undefined;\n            this.directionsDisplay = undefined;\n        }\n        /**\n         * @return {?}\n         */\n        AgmDirection.prototype.ngOnInit = /**\n         * @return {?}\n         */\n            function () {\n                this.directionDraw();\n            };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AgmDirection.prototype.ngOnChanges = /**\n         * @param {?} obj\n         * @return {?}\n         */\n            function (obj) {\n                /**\n                     * When visible is false then remove the direction layer\n                     */\n                if (!this.visible) {\n                    this.directionsDisplay.setPanel(null);\n                    this.directionsDisplay.setMap(null);\n                    this.directionsDisplay = undefined;\n                }\n                else {\n                    /**\n                           * When renderOptions are not first change then reset the display\n                           */\n                    if (obj.renderOptions) {\n                        if (obj.renderOptions.firstChange === false) {\n                            this.directionsDisplay.setPanel(null);\n                            this.directionsDisplay.setMap(null);\n                            this.directionsDisplay = undefined;\n                        }\n                    }\n                    this.directionDraw();\n                }\n            };\n        /**\n         * This event is fired when the user creating or updating this direction\n         * @return {?}\n         */\n        AgmDirection.prototype.directionDraw = /**\n         * This event is fired when the user creating or updating this direction\n         * @return {?}\n         */\n            function () {\n                var _this = this;\n                this.gmapsApi.getNativeMap().then(function (map) {\n                    if (typeof _this.directionsDisplay === 'undefined') {\n                        _this.directionsDisplay = new google.maps.DirectionsRenderer(_this.renderOptions);\n                        _this.directionsDisplay.setMap(map);\n                    }\n                    if (typeof _this.directionsService === 'undefined') {\n                        _this.directionsService = new google.maps.DirectionsService;\n                    }\n                    if (typeof _this.panel === 'undefined') {\n                        _this.directionsDisplay.setPanel(null);\n                    }\n                    else {\n                        _this.directionsDisplay.setPanel(_this.panel);\n                    }\n                    _this.directionsService.route({\n                        origin: _this.origin,\n                        destination: _this.destination,\n                        waypoints: _this.waypoints,\n                        optimizeWaypoints: _this.optimizeWaypoints,\n                        travelMode: _this.travelMode,\n                        drivingOptions: _this.drivingOptions,\n                        transitOptions: _this.transitOptions,\n                    }, function (response, status) {\n                        if (status === 'OK') {\n                            _this.directionsDisplay.setDirections(response);\n                        }\n                    });\n                });\n            };\n        AgmDirection.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'agm-direction'\n                    },] },\n        ];\n        /** @nocollapse */\n        AgmDirection.ctorParameters = function () {\n            return [\n                { type: core$1.GoogleMapsAPIWrapper, },\n            ];\n        };\n        AgmDirection.propDecorators = {\n            \"origin\": [{ type: core.Input },],\n            \"destination\": [{ type: core.Input },],\n            \"waypoints\": [{ type: core.Input },],\n            \"travelMode\": [{ type: core.Input },],\n            \"optimizeWaypoints\": [{ type: core.Input },],\n            \"visible\": [{ type: core.Input },],\n            \"renderOptions\": [{ type: core.Input },],\n            \"drivingOptions\": [{ type: core.Input },],\n            \"transitOptions\": [{ type: core.Input },],\n            \"panel\": [{ type: core.Input },],\n        };\n        return AgmDirection;\n    }());\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var AgmDirectionModule = /*@__PURE__*/ (function () {\n        function AgmDirectionModule() {\n        }\n        /**\n         * @return {?}\n         */\n        AgmDirectionModule.forRoot = /**\n         * @return {?}\n         */\n            function () {\n                return {\n                    ngModule: AgmDirectionModule,\n                };\n            };\n        AgmDirectionModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [],\n                        declarations: [\n                            AgmDirection,\n                        ],\n                        exports: [\n                            AgmDirection,\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        AgmDirectionModule.ctorParameters = function () { return []; };\n        return AgmDirectionModule;\n    }());\n    exports.AgmDirectionModule = AgmDirectionModule;\n    exports.AgmDirection = AgmDirection;\n    Object.defineProperty(exports, '__esModule', { value: true });\n})));\n",null]}